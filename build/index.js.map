{"version":3,"sources":["../api/index.js"],"names":["app","use","bodyParser","json","get","req","res","People","find","then","people","send","irregular","remove","next","status","uri","options","server","socketOptions","keepAlive","connectTimeoutMS","replset","useNewUrlParser","useUnifiedTopology","mongoose","connect","db","connection","on","console","error","bind","porta","process","env","PORT","listen","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR,E,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBC,qBAAOC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,CAAqB,UAAUC,MAAV,EAAkB;AACrC;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,MAAT;AACD,GAHD;AAID,CALD,E,CAOA;;AACAV,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBW,qBAAtB;AACAZ,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBY,kBAAnB;AACAb,GAAG,CAACC,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWQ,IAAX,EAAoB;AAC1BR,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,WAArB;AACD,CAFD;AAGA,IAAMa,GAAG,GACP;AACA,qGAFF;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,MADE;AAEbC,MAAAA,gBAAgB,EAAE;AAFL;AADT,GADM;AAOdC,EAAAA,OAAO,EAAE;AACPH,IAAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,MADE;AAEbC,MAAAA,gBAAgB,EAAE;AAFL;AADR,GAPK;AAadE,EAAAA,eAAe,EAAE,IAbH;AAcdC,EAAAA,kBAAkB,EAAE;AAdN,CAAhB;;AAiBAC,qBAASC,OAAT,CAAiBV,GAAjB,EAAsBC,OAAtB;;AACA,IAAMU,EAAE,GAAGF,qBAASG,UAApB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf,E,CAEA;;AACA,IAAMG,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC;AACApC,GAAG,CAACqC,MAAJ,CAAWJ,KAAX,EAAkB;AAAA,SAAMH,OAAO,CAACQ,GAAR,CAAY,qCAAZ,CAAN;AAAA,CAAlB","sourcesContent":["import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport mongoose from 'mongoose'\r\nimport irregular from './routes/irregular'\r\nimport remove from './routes/remove'\r\nimport People from './model/people'\r\n\r\nconst app = express()\r\n\r\napp.use(bodyParser.json())\r\n\r\n// home\r\napp.get('/', (req, res) => {\r\n  People.find({}).then(function (people) {\r\n    /* find arama yapacağı alan {} hepsini */\r\n    res.send(people)\r\n  })\r\n})\r\n\r\n// route\r\napp.use('/irregular', irregular)\r\napp.use('/remove', remove)\r\napp.use((req, res, next) => {\r\n  res.status(404).json('Not Found')\r\n})\r\nconst uri =\r\n  // eslint-disable-next-line max-len\r\n  'mongodb+srv://datamerge:2020denizli@cluster0.xl2tb.mongodb.net/<dbname>?retryWrites=true&w=majority'\r\n\r\nconst options = {\r\n  server: {\r\n    socketOptions: {\r\n      keepAlive: 300000,\r\n      connectTimeoutMS: 30000,\r\n    },\r\n  },\r\n  replset: {\r\n    socketOptions: {\r\n      keepAlive: 300000,\r\n      connectTimeoutMS: 30000,\r\n    },\r\n  },\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n}\r\n\r\nmongoose.connect(uri, options)\r\nconst db = mongoose.connection\r\ndb.on('error', console.error.bind(console, 'connection error:'))\r\n\r\n// listen\r\nconst porta = process.env.PORT || 8080\r\napp.listen(porta, () => console.log('Example app listening on port 8080!'))\r\n"],"file":"index.js"}