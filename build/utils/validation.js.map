{"version":3,"sources":["../../api/utils/validation.js"],"names":["validateError","error","forEach","err","errCode","code","console","log","personelInfoValidation","object","personelObject","Joi","id","number","required","name","string","min","username","mail","email","adress","schema","array","items","result","validate","abortEarly","res","message","value","details","context","isPersoneId","personelId","idArray","key"],"mappings":";;;;;;;;AAAA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,GAAD,EAAS;AACrB,QAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,GAJD;AAKD;;AAEM,SAASK,sBAAT,CAAgCC,MAAhC,EAAwC;AAC7C,MAAMC,cAAc,GAAGC,gBAAIF,MAAJ,CAAW;AAChCG,IAAAA,EAAE,EAAED,gBAAIE,MAAJ,GAAaC,QAAb,EAD4B;AAEhCC,IAAAA,IAAI,EAAEJ,gBAAIK,MAAJ,GAAaF,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,CAF0B;AAGhCC,IAAAA,QAAQ,EAAEP,gBAAIK,MAAJ,GAAaF,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,CAHsB;AAIhCE,IAAAA,IAAI,EAAER,gBAAIK,MAAJ,GAAaI,KAAb,GAAqBN,QAArB,EAJ0B;AAKhCO,IAAAA,MAAM,EAAEV,gBAAIK,MAAJ,GAAaF,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B;AALwB,GAAX,CAAvB;;AAQA,MAAMK,MAAM,GAAGX,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBd,cAAlB,CAAf;;AAEA,MAAMe,MAAM,GAAGH,MAAM,CAACI,QAAP,CAAgBjB,MAAhB,EAAwB;AAAEkB,IAAAA,UAAU,EAAE;AAAd,GAAxB,CAAf;;AACA,MAAIF,MAAM,CAACxB,KAAX,EAAkB;AAChB,WAAO;AACL2B,MAAAA,GAAG,EAAE,KADA;AAELzB,MAAAA,GAAG,EAAE;AACH;AACA0B,QAAAA,OAAO,EAAEJ,MAAM,CAACxB,KAAP,CAAa4B,OAFnB;AAGHC,QAAAA,KAAK,EAAEL,MAAM,CAACxB,KAAP,CAAa8B,OAAb,CAAqB,CAArB,EAAwBC,OAAxB,CAAgCF;AAHpC;AAFA,KAAP;AAQD;;AACD,SAAO;AAAEF,IAAAA,GAAG,EAAE;AAAP,GAAP;AACD;;AAEM,SAASK,WAAT,CAAqBC,UAArB,EAAiC;AACtC,MAAMC,OAAO,GAAGxB,gBAAIY,KAAJ,GAAYC,KAAZ,CAAkBb,gBAAIE,MAAJ,GAAaC,QAAb,EAAlB,CAAhB;;AACA,MAAMW,MAAM,GAAGU,OAAO,CAACT,QAAR,CAAiBQ,UAAjB,EAA6B;AAAEP,IAAAA,UAAU,EAAE;AAAd,GAA7B,CAAf;;AACA,MAAIF,MAAM,CAACxB,KAAX,EAAkB;AAChB,QAAM6B,KAAK,GAAGL,MAAM,CAACxB,KAAP,CAAa8B,OAAb,CAAqB,CAArB,EAAwBC,OAAxB,CAAgCF,KAA9C;AACA,QAAMM,GAAG,GAAGX,MAAM,CAACxB,KAAP,CAAa8B,OAAb,CAAqB,CAArB,EAAwBC,OAAxB,CAAgCI,GAA5C;AAEA,WAAO;AACLR,MAAAA,GAAG,EAAE,KADA;AAELzB,MAAAA,GAAG,0DAAkD2B,KAAlD,uBAAkEM,GAAlE;AAFE,KAAP;AAID;;AACD,SAAO;AAAER,IAAAA,GAAG,EAAE;AAAP,GAAP;AACD","sourcesContent":["import Joi from '@hapi/joi'\r\n\r\nfunction validateError(error) {\r\n  error.forEach((err) => {\r\n    const errCode = err.code\r\n\r\n    console.log(err)\r\n  })\r\n}\r\n\r\nexport function personelInfoValidation(object) {\r\n  const personelObject = Joi.object({\r\n    id: Joi.number().required(),\r\n    name: Joi.string().required().min(3),\r\n    username: Joi.string().required().min(3),\r\n    mail: Joi.string().email().required(),\r\n    adress: Joi.string().required().min(3),\r\n  })\r\n\r\n  const schema = Joi.array().items(personelObject)\r\n\r\n  const result = schema.validate(object, { abortEarly: false })\r\n  if (result.error) {\r\n    return {\r\n      res: false,\r\n      err: {\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        message: result.error.message,\r\n        value: result.error.details[0].context.value,\r\n      },\r\n    }\r\n  }\r\n  return { res: true }\r\n}\r\n\r\nexport function isPersoneId(personelId) {\r\n  const idArray = Joi.array().items(Joi.number().required())\r\n  const result = idArray.validate(personelId, { abortEarly: false })\r\n  if (result.error) {\r\n    const value = result.error.details[0].context.value\r\n    const key = result.error.details[0].context.key\r\n\r\n    return {\r\n      res: false,\r\n      err: `id should be in string not number => value: \"${value}\" key: \"${key}\"`,\r\n    }\r\n  }\r\n  return { res: true }\r\n}\r\n"],"file":"validation.js"}